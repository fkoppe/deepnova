name: CI Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Debug, RelWithDebug, RelWithDebInfo, RelTest, Release, MinSizeRel]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Clone Darkstar
        run: |
          git clone https://github.com/fkoppe/darkstar.git ${{ github.workspace }}/external/darkstar

      - name: Install Dependencies (Linux Only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y \
            libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev \
            libxext-dev libwayland-dev libxkbcommon-dev libgl1-mesa-dev xorg-dev

      - name: Build and Install Darkstar
        run: |
          cmake -B ${{ github.workspace }}/external/darkstar/build -S ${{ github.workspace }}/external/darkstar \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/external/darkstar/install \
            -DSYSTEM_DARKSTAR_DIR=${{ github.workspace }}/external/darkstar/install
          cmake --build ${{ github.workspace }}/external/darkstar/build --target install --config Release

      - name: Set Build Output Directory
        id: build_dir
        run: echo "build_output=${{ github.workspace }}/build" >> "$GITHUB_ENV"

      - name: Configure CMake
        run: >
          cmake -B ${{ env.build_output }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DDEEP_TEST_ENABLE=True \
          -S ${{ github.workspace }}

      - name: Build Project
        run: cmake --build ${{ env.build_output }} --config ${{ matrix.build_type }}

      - name: Run Tests
        working-directory: ${{ env.build_output }}
        run: ctest --build-config ${{ matrix.build_type }} --verbose --output-on-failure
